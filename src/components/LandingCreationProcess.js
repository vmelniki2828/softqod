import React, { useEffect, useState, useCallback } from 'react';
import styled, { keyframes } from 'styled-components';
import { motion, useAnimation, useInView } from 'framer-motion';

// Define keyframes
const rotate = keyframes`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
`;

const pulse = keyframes`
  0% {
    opacity: 0.5;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    opacity: 0.5;
  }
`;

// Styled components
const LPCreationSection = styled(motion.section)`
  position: relative;
  padding: 8rem 2rem;
  background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
  overflow: hidden;
  z-index: 1;
`;

const LPCreationBgPattern = styled.div`
  position: absolute;
  inset: 0;
  background-image: linear-gradient(rgba(94, 234, 212, 0.05) 1px, transparent 1px), 
                   linear-gradient(90deg, rgba(94, 234, 212, 0.05) 1px, transparent 1px);
  background-size: 40px 40px;
  background-position: 0 0;
  z-index: 0;
  opacity: 0.2;
`;

const LPCreationBottomFade = styled.div`
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 300px;
  background: linear-gradient(to bottom, transparent, #0f172a);
  z-index: 0;
  pointer-events: none;
`;

const LPCreationContainer = styled.div`
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
  z-index: 2;
  display: flex;
  flex-direction: column;
  align-items: center;
`;

const LPCreationAccentLine = styled(motion.div)`
  height: 4px;
  width: 80px;
  background: linear-gradient(90deg, #5eead4, #0ea5e9);
  border-radius: 2px;
  margin-bottom: 2rem;
`;

const LPCreationTitle = styled(motion.h2)`
  font-size: clamp(2.2rem, 5vw, 3.2rem);
  font-weight: 800;
  text-align: center;
  margin-bottom: 2.5rem;
  background: linear-gradient(135deg, #fff 0%, #5eead4 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  filter: drop-shadow(0 2px 4px rgba(94, 234, 212, 0.3));
  position: relative;
  line-height: 1.3;
  letter-spacing: -0.5px;
`;

const LPCreationDescription = styled(motion.p)`
  font-size: 1.2rem;
  line-height: 1.8;
  color: #94a3b8;
  text-align: center;
  max-width: 900px;
  margin-bottom: 4rem;
`;

const LPCreationStepsGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
  width: 100%;
  margin-bottom: 4rem;
`;

const LPCreationStepCard = styled(motion.div)`
  background: rgba(255, 255, 255, 0.03);
  backdrop-filter: blur(10px);
  border-radius: 20px;
  padding: 2.5rem 2rem;
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(255, 255, 255, 0.05);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  transition: all 0.3s ease;
  isolation: isolate;
  height: 100%;
  display: flex;
  flex-direction: column;
`;

const LPCreationStepNumber = styled.div`
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  font-size: 2.5rem;
  font-weight: 900;
  color: rgba(255, 255, 255, 0.03);
  font-family: monospace;
  line-height: 1;
`;

const LPCreationStepIcon = styled.div`
  font-size: 3rem;
  margin-bottom: 1.5rem;
  filter: drop-shadow(0 0 10px rgba(94, 234, 212, 0.2));
`;

const LPCreationStepTitle = styled.h3`
  font-size: 1.4rem;
  font-weight: 700;
  color: #f1f5f9;
  margin-bottom: 1rem;
  background: linear-gradient(135deg, #fff 10%, #5eead4 90%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
`;

const LPCreationStepText = styled.p`
  font-size: 1.1rem;
  line-height: 1.7;
  color: #94a3b8;
  flex-grow: 1;
`;

const LPCreationInfoBox = styled(motion.div)`
  background: rgba(255, 255, 255, 0.02);
  backdrop-filter: blur(10px);
  border-radius: 24px;
  padding: 3rem;
  width: 100%;
  max-width: 900px;
  margin-bottom: 4rem;
  border: 1px solid rgba(255, 255, 255, 0.05);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
  position: relative;
`;

const LPCreationDecorativeCircle = styled.div`
  position: absolute;
  border-radius: 50%;
  z-index: 0;
  
  &.circle1 {
    width: 300px;
    height: 300px;
    border: 1px dashed rgba(94, 234, 212, 0.1);
    top: 10%;
    left: -150px;
    animation: ${rotate} 40s linear infinite;
  }
  
  &.circle2 {
    width: 200px;
    height: 200px;
    border: 1px dashed rgba(14, 165, 233, 0.1);
    bottom: 20%;
    right: -100px;
    animation: ${rotate} 30s linear infinite reverse;
  }
  
  &.circle3 {
    width: 100px;
    height: 100px;
    background: radial-gradient(circle, rgba(94, 234, 212, 0.05) 0%, transparent 70%);
    top: 40%;
    right: 10%;
    filter: blur(20px);
    animation: ${pulse} 5s ease-in-out infinite;
  }
`;

// Component implementation
const LandingCreationProcess = () => {
  const controls = useAnimation();
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: false
  });

  useEffect(() => {
    if (inView) {
      controls.start("visible");
    }
  }, [controls, inView]);

  const container = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2,
        delayChildren: 0.3
      }
    }
  };

  const item = {
    hidden: { y: 20, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: {
        type: "spring",
        stiffness: 100,
        damping: 10
      }
    }
  };

  const fadeIn = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.8,
        ease: "easeOut"
      }
    }
  };
  
  const creationSteps = [
    {
      id: 1,
      icon: "üîç",
      title: "–ê–Ω–∞–ª—ñ–∑ —Ç–∞ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—è",
      content: "–ì–ª–∏–±–æ–∫–æ –≤–∏–≤—á–∞—î–º–æ –±—ñ–∑–Ω–µ—Å, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤ —Ç–∞ —Ü—ñ–ª—å–æ–≤—É –∞—É–¥–∏—Ç–æ—Ä—ñ—é –¥–ª—è —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è —á—ñ—Ç–∫–æ—ó —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó. –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–ª—é—á–æ–≤—ñ —Ü—ñ–ª—ñ —Ç–∞ –º–µ—Ç—Ä–∏–∫–∏ —É—Å–ø—ñ—Ö—É."
    },
    {
      id: 2,
      icon: "üé®",
      title: "–î–∏–∑–∞–π–Ω —Ç–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø",
      content: "–°—Ç–≤–æ—Ä—é—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –¥–∏–∑–∞–π–Ω, —â–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î —Å—É—Ç–Ω—ñ—Å—Ç—å –±—Ä–µ–Ω–¥—É. –†–æ–∑—Ä–æ–±–ª—è—î–º–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø –∑ —Ñ–æ–∫—É—Å–æ–º –Ω–∞ –∫–æ–Ω–≤–µ—Ä—Å—ñ—é —Ç–∞ –¥–æ—Å–≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."
    },
    {
      id: 3,
      icon: "üíª",
      title: "–†–æ–∑—Ä–æ–±–∫–∞",
      content: "–ë—É–¥—É—î–º–æ –∞–¥–∞–ø—Ç–∏–≤–Ω–∏–π –ª–µ–Ω–¥—ñ–Ω–≥ –∑ —Å—É—á–∞—Å–Ω–∏–º–∏ –∞–Ω—ñ–º–∞—Ü—ñ—è–º–∏. –û–ø—Ç–∏–º—ñ–∑—É—î–º–æ —à–≤–∏–¥–∫—ñ—Å—Ç—å —Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –¥–ª—è –Ω–∞–π–∫—Ä–∞—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤."
    },
    {
      id: 4,
      icon: "üöÄ",
      title: "–ó–∞–ø—É—Å–∫ —Ç–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞",
      content: "–ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∞–Ω–∞–ª—ñ—Ç–∏–∫—É, —Ç–µ—Å—Ç—É—î–º–æ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î–º–æ –ª–µ–Ω–¥—ñ–Ω–≥ –∑ –ø–æ–¥–∞–ª—å—à–æ—é –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –¥–ª—è –ø–æ—Å—Ç—ñ–π–Ω–æ–≥–æ –≤–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–Ω—è."
    }
  ];

  // Mouse following effect for the cards
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });

  const handleMouseMove = useCallback((e) => {
    const card = e.currentTarget;
    const rect = card.getBoundingClientRect();
    
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;
    
    setMousePosition({ x, y });
  }, []);

  return (
    <LPCreationSection 
      ref={ref}
      initial="hidden"
      animate={controls}
      variants={fadeIn}
      id="landing-creation-process"
    >
      <LPCreationBgPattern />
      <LPCreationDecorativeCircle className="circle1" />
      <LPCreationDecorativeCircle className="circle2" />
      <LPCreationDecorativeCircle className="circle3" />
      <LPCreationBottomFade />
      
      <LPCreationContainer>
        <LPCreationAccentLine 
          initial={{ width: 0 }}
          animate={controls}
          variants={{
            hidden: { width: 0 },
            visible: { 
              width: 80,
              transition: { duration: 0.8, ease: "easeOut" }
            }
          }}
        />
        
        <LPCreationTitle
          initial={{ opacity: 0, y: 20 }}
          animate={controls}
          variants={item}
        >
          –Ø–∫ –º–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ –ª–µ–Ω–¥—ñ–Ω–≥, —â–æ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î –≤—ñ–¥–≤—ñ–¥—É–≤–∞—á—ñ–≤ —É –ø–æ–∫—É–ø—Ü—ñ–≤
        </LPCreationTitle>
        
        <LPCreationDescription
          initial={{ opacity: 0 }}
          animate={controls}
          variants={{
            hidden: { opacity: 0 },
            visible: { 
              opacity: 1,
              transition: { duration: 1.2, ease: "easeOut", delay: 0.2 }
            }
          }}
        >
          –©–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏–π –ª–µ–Ω–¥–∏–Ω–≥, –º–∏ –ø–æ—á–∏–Ω–∞—î–º–æ –∑ –≥–ª–∏–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É: –≤–∏–≤—á–∞—î–º–æ —Ä–∏–Ω–æ–∫, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤ —ñ —á—ñ—Ç–∫–æ –≤–∏–∑–Ω–∞—á–∞—î–º–æ —Ü—ñ–ª—å–æ–≤—É –∞—É–¥–∏—Ç–æ—Ä—ñ—é. –¶–µ –¥–æ–∑–≤–æ–ª—è—î –ø–æ–±—É–¥—É–≤–∞—Ç–∏ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫—Ä–∞—Å–∏–≤–∏–π —Å–∞–π—Ç, –∞ —Ç–∞–∫–∏–π, —â–æ –≥–æ–≤–æ—Ä–∏—Ç—å –º–æ–≤–æ—é –∫–ª—ñ—î–Ω—Ç–∞ –π –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –π–æ–≥–æ –ø–æ—Ç—Ä–µ–±–∏.
        </LPCreationDescription>
        
        <LPCreationStepsGrid 
          as={motion.div}
          variants={container}
          initial="hidden"
          animate={controls}
        >
          {creationSteps.map((step) => (
            <LPCreationStepCard
              key={step.id}
              variants={item}
              whileHover={{ 
                y: -10, 
                boxShadow: "0 15px 30px rgba(0, 0, 0, 0.3)",
                backgroundColor: "rgba(255, 255, 255, 0.05)",
                transition: { duration: 0.3 }
              }}
              onMouseMove={handleMouseMove}
              style={{
                background: `radial-gradient(circle at ${mousePosition.x}px ${mousePosition.y}px, 
                  rgba(94, 234, 212, 0.08) 0%, 
                  rgba(255, 255, 255, 0.03) 50%)`
              }}
            >
              <LPCreationStepNumber>{step.id}</LPCreationStepNumber>
              <LPCreationStepIcon>{step.icon}</LPCreationStepIcon>
              <LPCreationStepTitle>{step.title}</LPCreationStepTitle>
              <LPCreationStepText>{step.content}</LPCreationStepText>
            </LPCreationStepCard>
          ))}
        </LPCreationStepsGrid>
        
        <LPCreationInfoBox
          as={motion.div}
          variants={fadeIn}
          whileHover={{ 
            boxShadow: "0 15px 40px rgba(94, 234, 212, 0.15)",
            transition: { duration: 0.3 }
          }}
        >
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={controls}
            variants={{
              hidden: { opacity: 0, y: 20 },
              visible: { 
                opacity: 1,
                y: 0,
                transition: { duration: 0.8, ease: "easeOut", delay: 0.6 }
              }
            }}
          >
            <p style={{ fontSize: "1.1rem", lineHeight: 1.8, color: "#94a3b8" }}>
              <strong style={{ color: "#f1f5f9" }}>–°—Ç—Ä—É–∫—Ç—É—Ä–∞</strong> ‚Äî —Å—Ç–≤–æ—Ä—é—î–º–æ –ª–æ–≥—ñ—á–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π –≤–∑–∞—î–º–æ–¥—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–æ—é. –§–æ—Ä–º—É—î–º–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø, –¥–µ –≤–∏–∑–Ω–∞—á–∞—î–º–æ –∫–ª—é—á–æ–≤—ñ –±–ª–æ–∫–∏, —ó—Ö –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å —Ç–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —â–æ –≤–µ–¥—É—Ç—å –¥–æ —Ü—ñ–ª—å–æ–≤–æ—ó –¥—ñ—ó.
            </p>
            <br />
            <p style={{ fontSize: "1.1rem", lineHeight: 1.8, color: "#94a3b8" }}>
              <strong style={{ color: "#f1f5f9" }}>–î–∏–∑–∞–π–Ω</strong> —Å–∞–π—Ç—É —Ä–æ–∑—Ä–æ–±–ª—è—î—Ç—å—Å—è –ø—ñ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É –Ω—ñ—à—É ‚Äî —Å—É—á–∞—Å–Ω–∏–π, —Å—Ç–∏–ª—å–Ω–∏–π, –∑ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏ –Ω–∞ –≥–æ–ª–æ–≤–Ω–µ. –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –º–∏ –∑–≤–µ—Ä—Å—Ç–∞—î–º–æ —Å–∞–π—Ç —ñ –∞–¥–∞–ø—Ç—É—î–º–æ –π–æ–≥–æ –ø—ñ–¥ —É—Å—ñ –ø—Ä–∏—Å—Ç—Ä–æ—ó: —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∏, –ø–ª–∞–Ω—à–µ—Ç–∏, –Ω–æ—É—Ç–±—É–∫–∏.
            </p>
            <br />
            <p style={{ fontSize: "1.1rem", lineHeight: 1.8, color: "#94a3b8" }}>
              <strong style={{ color: "#f1f5f9" }}>–ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º</strong> –º–∏ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏ (Google Analytics, Facebook Pixel —Ç–æ—â–æ), –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω—ñ—Å—Ç—å —É—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Ç–∞ —Ç–µ—Å—Ç—É—î–º–æ —à–≤–∏–¥–∫—ñ—Å—Ç—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è. –ü—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É –º–∏ –Ω–µ –∑–∞–ª–∏—à–∞—î–º–æ –≤–∞—Å –Ω–∞–æ–¥–∏–Ω—Ü—ñ ‚Äî –¥–æ–ø–æ–º–∞–≥–∞—î–º–æ –∑ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—î—é —Ç–∞ –∞–Ω–∞–ª—ñ–∑—É—î–º–æ –ø–æ–≤–µ–¥—ñ–Ω–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –∫–æ–Ω–≤–µ—Ä—Å—ñ—ó.
            </p>
          </motion.div>
        </LPCreationInfoBox>
        
        <motion.div
          variants={fadeIn}
          initial="hidden"
          animate={controls}
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
        >
          <button 
            style={{
              background: "linear-gradient(90deg, #5eead4, #0ea5e9)",
              border: "none",
              padding: "1.2rem 2.5rem",
              borderRadius: "12px",
              color: "#0f172a",
              fontSize: "1.2rem",
              fontWeight: 700,
              cursor: "pointer",
              display: "flex",
              alignItems: "center",
              gap: "0.8rem",
              boxShadow: "0 10px 20px rgba(94, 234, 212, 0.2)",
              position: "relative",
              overflow: "hidden"
            }}
          >
            –ó–∞–º–æ–≤–∏—Ç–∏ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏–π –ª–µ–Ω–¥—ñ–Ω–≥
            <span>‚Üí</span>
          </button>
        </motion.div>
      </LPCreationContainer>
    </LPCreationSection>
  );
};

export default LandingCreationProcess; 